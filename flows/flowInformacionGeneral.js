const { addKeyword } = require('@bot-whatsapp/bot');

const flowInformacionGeneral = addKeyword(['informacion', 'preguntas', 'dudas'])
.addAnswer(
    `üìã *Selecciona una opci√≥n para obtener informaci√≥n:*
1Ô∏è‚É£ ¬øCu√°l es la direcci√≥n de la oficina administrativa Monter√≠a?
2Ô∏è‚É£ ¬øAtienden los domingos o festivos?
3Ô∏è‚É£ ¬øA qu√© hora puedo cobrar premios?
4Ô∏è‚É£ ¬øA qu√© l√≠nea puedo comunicarme para obtener informaci√≥n general?`,
    { capture: true },
    async (ctx, { flowDynamic, fallBack }) => {
        const opcion = ctx.body.trim();

        switch (opcion) {
            case '1':
                await flowDynamic("üè¢ Nuestra oficina administrativa Monter√≠a se encuentra ubicada en la calle 32 #2-08 B/centro.");
                break;

            case '2':
                await flowDynamic("¬°Claro que s√≠!\n\nNuestros puntos de venta est√°n disponibles desde las 7:00 a.m. hasta las 8:00 p.m. horario continuo.\n\nüìå Recuerda que nuestra oficina administrativa no abre esos d√≠as.");
                break;

            case '3':
                await flowDynamic("üí∞ *Para cobrar tu premio:*\n\n1Ô∏è. Espera a que se juegue el sorteo o loter√≠a a la que apostaste.\n\n2Ô∏è. Ac√©rcate a uno de nuestros puntos de venta en los horarios establecidos.\n\n3Ô∏è. Si tu premio supera los $250.000 debes acercarte a una oficina principal.\n\n¬°Y listo!");
                break;

            case '4':
                await flowDynamic("üìû Puedes comunicarte a nuestra l√≠nea fija:\n\n604 789 0042\n\nAll√≠ resolveremos todas tus dudas e inquietudes.");
                break;

            default:
                await flowDynamic("‚ùå Opci√≥n no v√°lida. Por favor, elige una de las opciones (1 a 4).");
                return fallBack();
        }
        // NOTA: no preguntamos aqu√≠; la siguiente addAnswer se encargar√° de preguntar y capturar la respuesta.
    }
)
.addAnswer(
    "¬øTe puedo ayudar en algo m√°s?\n1Ô∏è‚É£ S√≠\n2Ô∏è‚É£ No",
    { capture: true },
    async (ctx, { flowDynamic, gotoFlow, fallBack }) => {
        const r = ctx.body.trim().toLowerCase();

        if (r === '1' || r.includes('si') || r.includes('s√≠')) {
            // Importaci√≥n din√°mica justo antes del gotoFlow (as√≠ evitas dependencia circular)
            const flowPremios = require('./flowPremios'); // m√≥dulo exportado como module.exports = flowPremios
            return gotoFlow(flowPremios);
            // Si en su lugar quisieras enviar al flowPrincipal definido en app.js deber√≠as:
            // const flowPrincipal = require('../app').flowPrincipal;
            // return gotoFlow(flowPrincipal);
        }

        if (r === '2' || r.includes('no')) {
            // Importaci√≥n din√°mica para el flujo de gracias
            const flowGracias = require('./flowGracias'); // m√≥dulo exportado como module.exports = flowGracias
            return gotoFlow(flowGracias);
        }

        await flowDynamic("‚ùå No entend√≠. Responde con `1` o `2`.");
        return fallBack();
    }
);

module.exports = flowInformacionGeneral;