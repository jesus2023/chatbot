const { addKeyword } = require('@bot-whatsapp/bot');

const flowPremios = addKeyword(['premio', 'premios'])
  .addAnswer(
    'üí∞ *Opciones relacionadas con los premios:*\n\n' +
    '1Ô∏è‚É£ Resultados anteriores\n' +
    '2Ô∏è‚É£ ¬øA qu√© hora puedo cobrar premios?\n' +
    '3Ô∏è‚É£ Requisitos para cobrar mi premio\n\n' +
    'Por favor, responde con el n√∫mero de la opci√≥n que desees consultar.',
    { capture: true },
    async (ctx, { flowDynamic, gotoFlow, fallBack }) => {
      const opcion = ctx.body.trim();

      switch (opcion) {
        case '1':
          // Redirige al flujo de resultados anteriores
          const flowResultadosAnteriores = require('./flowResultadosAnteriores');
          return gotoFlow(flowResultadosAnteriores);

        case '2':
          await flowDynamic(
            'Para cobrar tu premio:\n\n' +
            '1Ô∏è‚É£ Espera a que se juegue el sorteo o loter√≠a a la que apostaste.\n' +
            '2Ô∏è‚É£ Ac√©rcate a uno de nuestros puntos de venta en los horarios establecidos.\n' +
            '3Ô∏è‚É£ Si tu premio supera los $250.000 debes acercarte a una oficina principal.\n\n' +
            '¬°Y listo! üéâ'
          );
          break;

        case '3':
          await flowDynamic(
            'Aqu√≠ te dejo los requisitos para cobrar tu premio:\n\n' +
            'üßë‚Äçü¶± Ser mayor de edad.\n' +
            'üßæ El formulario debe estar en perfectas condiciones (sin estar roto, rayado, quemado o mojado).\n' +
            'ü™™ Presentar tu documento de identidad.\n' +
            '‚úçÔ∏è Escribe tu nombre completo, c√©dula, direcci√≥n y tel√©fono en la parte de atr√°s del formulario.\n\n' +
            '‚ö†Ô∏è Recuerda: el premio es pagado al portador, por lo tanto, quien tenga el formulario puede cobrarlo. ¬°Cons√©rvalo en buen estado!'
          );
          break;

        default:
          await flowDynamic('‚ùå Opci√≥n no v√°lida. Por favor responde con 1, 2 o 3.');
          return fallBack();
      }
    }
  )
  .addAnswer(
    "¬øTe puedo ayudar en algo m√°s?\n1Ô∏è‚É£ Volver al inicio\n2Ô∏è‚É£ Finalizar chat",
    { capture: true },
    async (ctx, { flowDynamic, gotoFlow, fallBack }) => {
      const r = ctx.body.trim().toLowerCase();

      if (r === '1' || r.includes('si') || r.includes('s√≠')) {
        const flowPrincipal = require('../app').flowPrincipal; 
        return gotoFlow(flowPrincipal);
      }

      if (r === '2' || r.includes('no')) {
        const flowGracias = require('./flowGracias');
        return gotoFlow(flowGracias);
      }

      await flowDynamic('‚ùå No entend√≠. Responde con `1` o `2`.');
      return fallBack();
    }
  );

module.exports = flowPremios;